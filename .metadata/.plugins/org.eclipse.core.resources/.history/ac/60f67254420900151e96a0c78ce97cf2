Ext.require([ 'Ext.grid.*', 'Ext.data.*', 'Ext.panel.*',
		'Ext.layout.container.Border' ]);

Ext.onReady(function() {
	Ext.define('Account', {
		extend : 'Ext.data.Model',
		fields : [ {
			name : 'accountId',
			type : 'int'
		}, {
			name : 'name',
			type : 'string'
		}

		]
	});

	// create the Data Store
	var accountStore = Ext.create('Ext.data.Store', {
		autoLoad : true,
		autoSync : true,
		model : 'Account',
		proxy : {
			type : 'rest',
			url : '/admin/account/accounts',
			reader : {
				type : 'json',
				rootProperty : 'data'
			},
			writer : {
				type : 'json'
			}
		},
		listeners : {
			write : function(store, operation) {
				var record = operation.getRecords()[0], name = Ext.String
						.capitalize(operation.action), verb;

				if (name == 'Destroy') {
					verb = 'Destroyed';
				} else {
					verb = name + 'd';
				}
				Ext.example.msg(name, Ext.String.format("{0} user: {1}", verb,
						record.getId()));

			}
		}
	});

	// create the grid
	var accountGrid = Ext.create('Ext.grid.Panel', {
		bufferedRenderer : false,
		store : accountStore,
		columns : [ {
			text : "Account",
			width : 150,
			dataIndex : 'accountId',
			sortable : true
		}, {
			text : "Account Name",
			flex : 1,
			dataIndex : 'name',
		} ],
		forceFit : false,
		split : true,
		region : 'north'
	});

	var accountForm = Ext.create('Ext.form.Panel', {
		title : 'User Form',
		height : 150,
		width : 300,
		bodyPadding : 10,
		defaultType : 'textfield',
		items : [ {
			fieldLabel : 'First Name',
			name : 'firstName'
		}, {
			fieldLabel : 'Last Name',
			name : 'lastName'
		}, {
			xtype : 'datefield',
			fieldLabel : 'Date of Birth',
			name : 'birthDate'
		} ]
	});

	var accountPanel = Ext.create('Ext.Panel', {
		renderTo : 'grid',
		frame : true,
		title : 'Account List',
		width : 300,
		height : 300,
		layout : 'border',
		items : [ accountGrid, accountForm ]
	});

	accountStore.load();
});