Ext.Loader.setConfig({
	enabled : true,
	paths : {
		MyApp : 'js/MyApp'
	}
});

Ext.require([ 'Ext.grid.*', 'Ext.data.*', 'Ext.panel.*',
		'Ext.layout.container.Border' ]);

Ext.onReady(function() {

	// create the Data Store for each basic info
	var accountStore = Ext.create('Ext.data.Store', {
		autoLoad : true,
		autoSync : true,
		model : 'Account',
		proxy : {
			type : 'rest',
			url : '/admin/account/accounts',
			reader : {
				type : 'json',
				rootProperty : 'data'
			},
			writer : {
				type : 'json'
			}
		}
	});

	var currencyStore = Ext.create('Ext.data.Store', {
		autoLoad : true,
		autoSync : true,
		model : 'Currency',
		proxy : {
			type : 'rest',
			url : '/admin/currency/currencys',
			reader : {
				type : 'json',
				rootProperty : 'data'
			},
			writer : {
				type : 'json'
			}
		}
	});

	var brandStore = Ext.create('Ext.data.Store', {
		autoLoad : true,
		autoSync : true,
		model : 'Brand',
		proxy : {
			type : 'rest',
			url : '/admin/brand/brands',
			reader : {
				type : 'json',
				rootProperty : 'data'
			},
			writer : {
				type : 'json'
			}
		}
	});

	var statusStore = Ext.create('Ext.data.Store', {
		autoLoad : true,
		autoSync : true,
		model : 'Status',
		proxy : {
			type : 'rest',
			url : '/admin/status/statuses',
			reader : {
				type : 'json',
				rootProperty : 'data'
			},
			writer : {
				type : 'json'
			}
		}
	});
	// end store

	// create the grid
	var accountGrid = Ext.create('Ext.grid.Panel', {
		title : 'Account record',
		width : 600,
		bufferedRenderer : false,
		store : accountStore,
		columns : [ {
			text : "Code",
			dataIndex : 'accountId',
			sortable : true
		}, {
			text : "Name",
			flex : 1,
			dataIndex : 'name',
		} ],
		forceFit : false,
		split : true,
		region : 'west'
	});

	var currencyGrid = Ext.create('Ext.grid.Panel', {
		title : 'Currency record',
		width : 600,
		bufferedRenderer : false,
		store : currencyStore,
		columns : [ {
			text : "Code",
			dataIndex : 'currencyId',
			sortable : true
		}, {
			text : "Name",
			flex : 1,
			dataIndex : 'name'
		}, {
			text : "Rate",
			flex : 1,
			dataIndex : 'rate',

		} ],
		forceFit : false,
		split : true,
		region : 'west'
	});

	var brandGrid = Ext.create('Ext.grid.Panel', {
		title : 'Brand record',
		width : 600,
		bufferedRenderer : false,
		store : brandStore,
		columns : [ {
			text : "Code",
			dataIndex : 'brandId',
			sortable : true
		}, {
			text : "Name",
			flex : 1,
			dataIndex : 'name',
		} ],
		forceFit : false,
		split : true,
		region : 'west'
	});

	var statusGrid = Ext.create('Ext.grid.Panel', {
		title : 'Status record',
		width : 600,
		bufferedRenderer : false,
		store : statusStore,
		columns : [ {
			text : "Code",
			dataIndex : 'statusId',
			sortable : true
		}, {
			text : "Name",
			flex : 1,
			dataIndex : 'name',
		} ],
		forceFit : false,
		split : true,
		region : 'west'
	});

	// end grid

	// start creating the form for each basic info

	var accountForm = Ext.create('Ext.form.Panel', {
		title : 'account info',
		region : "center",
		bodyPadding : 10,
		defaultType : 'textfield',
		items : [ {
			fieldLabel : 'Account Name',
			name : 'name'
		}, {
			xtype : 'button',
			text : 'Add new account',
			margin : 10,
			handler : function() {
				var form = this.up('form').getForm();
				var name = form.findField('name').getSubmitValue();
				Ext.Ajax.request({
					url : '/admin/account/add',
					method : 'GET',
					params : {
						name : name
					},
					success : function() {
						console.log('success');
					},
					failure : function() {
						console.log('failure');
					}
				});
			}
		}, {
			xtype : 'button',
			text : 'Reset',
			margin : 10,
			handler : function() {
				var form = this.up('form').getForm();
				form.reset();
			}
		} ]
	});
	var currencyForm = Ext.create('Ext.form.Panel', {
		title : 'Currency info',
		region : "center",
		bodyPadding : 10,
		defaultType : 'textfield',
		items : [ {
			fieldLabel : 'Currency Name',
			name : 'name'
		}, {
			fieldLabel : 'Currency Rate',
			name : 'rate'
		}, {
			xtype : 'button',
			text : 'Add new currency',
			margin : 10,
			handler : function() {
				var form = this.up('form').getForm();
				var name = form.findField('name').getSubmitValue();
				var rate = form.findField('rate').getSubmitValue();
				Ext.Ajax.request({
					url : '/admin/currency/add',
					method : 'GET',
					params : {
						name : name,
						rate : rate
					},
					success : function() {
						console.log('success');
					},
					failure : function() {
						alert('error');
						console.log('failure');
					}
				});
			}
		}, {
			xtype : 'button',
			text : 'Reset',
			margin : 10,
			handler : function() {
				var form = this.up('form').getForm();
				form.reset();
			}
		} ]
	});

	var brandForm = Ext.create('Ext.form.Panel', {
		title : 'Brand info',
		region : "center",
		bodyPadding : 10,
		defaultType : 'textfield',
		items : [ {
			fieldLabel : 'Brand Name',
			name : 'name'
		}, {
			xtype : 'button',
			text : 'Add new brand',
			margin : 10,
			handler : function() {
				var form = this.up('form').getForm();
				var name = form.findField('name').getSubmitValue();
				Ext.Ajax.request({
					url : '/admin/brand/add',
					method : 'GET',
					params : {
						name : name
					},
					success : function() {
						console.log('success');
					},
					failure : function() {
						console.log('failure');
					}
				});
			}
		}, {
			xtype : 'button',
			text : 'Reset',
			margin : 10,
			handler : function() {
				var form = this.up('form').getForm();
				form.reset();
			}
		} ]
	});

	var statusForm = Ext.create('Ext.form.Panel', {
		title : 'Status info',
		region : "center",
		bodyPadding : 10,
		defaultType : 'textfield',
		items : [ {
			fieldLabel : 'Status Name',
			name : 'name'
		}, {
			xtype : 'button',
			text : 'Add new status',
			margin : 10,
			handler : function() {
				var form = this.up('form').getForm();
				var name = form.findField('name').getSubmitValue();
				Ext.Ajax.request({
					url : '/admin/status/add',
					method : 'GET',
					params : {
						name : name
					},
					success : function() {
						console.log('success');
					},
					failure : function() {
						console.log('failure');
					}
				});
			}
		}, {
			xtype : 'button',
			text : 'Reset',
			margin : 10,
			handler : function() {
				var form = this.up('form').getForm();
				form.reset();
			}
		} ]
	});

	var accountPanel = Ext.create('Ext.Panel', {
		frame : true,
		width : 1000,
		height : 600,
		layout : 'border',
		items : [ accountGrid, accountForm ]
	});

	var currecnyPanel = Ext.create('Ext.Panel', {
		frame : true,
		width : 1000,
		height : 600,
		layout : 'border',
		items : [ currencyGrid, currencyForm ]
	});

	var statusPanel = Ext.create('Ext.Panel', {
		frame : true,
		width : 1000,
		height : 600,
		layout : 'border',
		items : [ statusGrid, statusForm ]
	});

	var brandPanel = Ext.create('Ext.Panel', {
		frame : true,
		width : 1000,
		height : 600,
		layout : 'border',
		items : [ brandGrid, brandForm ]
	});
	// end

	accountStore.load();

	var mainContainer = Ext.create('Ext.tab.Panel', {
		width : 1030,
		height : 630,
		bodyPadding : 15,
		renderTo : 'grid',
		items : [ {
			title : 'Account',
			items : accountPanel
		}, {
			title : 'Currency',
			items : currecnyPanel
		}, {
			title : 'Brand',
			items : brandPanel
		}, {
			title : 'Status',
			items : statusPanel
		} ]
	});
});